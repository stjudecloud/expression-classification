#!/bin/bash
# t-SNE 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

main() {
    echo "Value of input_sample: '${input_sample[@]}'"
    echo "Value of tissue_type: '${tissue_type}'"

    local_data_dir=$HOME/in
    local_reference_dir=$HOME/reference
    local_output_dir=$HOME/out
    container_data_dir=/data
    container_reference_dir=/reference
    container_output_dir=/results

    mkdir $local_reference_dir
    mkdir $local_output_dir

    # Fetch input counts data
    echo ""
    echo "=== Setup ==="
    echo "  [*] Downloading input files ..."
    dx-download-all-inputs

    # Fetch existing counts cohort
    # Fetch covariates 
    echo ""
    echo "  [*] Downloading count files ..."
    if [ "$tissue_type" == "blood" ]
    then 
       #dx download -o $local_reference_dir/HTSeq -r project-FjFfvV89F80QvvxJ8131yzpB:/HTSeq
       dx download -o $local_reference_dir -r project-FjFfvV89F80QvvxJ8131yzpB:file-FjPb6xQ9F80VYB9yGj3fkqj8
       dx download -o $local_reference_dir/covariates.tsv -r project-FjFfvV89F80QvvxJ8131yzpB:/covariates.tsv
       (cd $local_reference_dir && tar --no-same-owner -jxf HTSeq.tar.bz2)
    elif [ "$tissue_type" == "brain" ]
    then
       echo "no cohort"
       exit -1
    elif [ "$tissue_type" == "solid" ]
    then 
       echo "no cohort"
       exit -1
    else 
       exit -1
    fi
    # Add input samples to covariates list
    tail -n +2 $HOME/in/covariates/* >> $local_reference_dir/covariates.tsv

    # Fetch gene blacklist
    echo ""
    echo "  [*] Downloading gene blacklist ..."
    dx download -o $local_reference_dir -r project-FjFfvV89F80QvvxJ8131yzpB:/gene.blacklist.tsv 

    # Fetch Gencode
    echo ""
    echo "  [*] Downloading gencode ..."
    dx download -o $local_reference_dir/gencode.v32.annotation.gtf.gz -r project-FjFfvV89F80QvvxJ8131yzpB:/gencode.v32.annotation.gtf.gz 
    dx download -o $local_reference_dir/gencode.v32.annotation.gtf.gz.tbi -r project-FjFfvV89F80QvvxJ8131yzpB:/gencode.v32.annotation.gtf.gz.tbi 

    # Run interactive t-SNE
    echo ""
    echo "  [*] Running t-SNE ..."
    in_arg=
    for file in $HOME/in/input_sample/*/*
    do
       name=$(basename $file ".counts.txt")
       name=$(basename $name ".HTSeq")
       in_arg="$in_arg --input-sample $name"  
    done 
    docker run -v $local_data_dir:$container_data_dir -v $local_reference_dir:$container_reference_dir -v $local_output_dir:$container_output_dir adthrasher/tsne bash -c "cd $container_output_dir && itsne-main --debug-rscript -b $container_reference_dir/gene.blacklist.tsv -g $container_reference_dir/gencode.v32.annotation.gtf.gz -c $container_reference_dir/covariates.tsv -o $container_output_dir/samples.html ${in_arg} $container_reference_dir/HTSeq/*.HTSeq $container_data_dir/input_sample/*/*" 

    # Upload output  
    graph=$(dx upload $local_output_dir/samples.html --brief)
    dx-jobutil-add-output graph "$graph" --class=file
}
